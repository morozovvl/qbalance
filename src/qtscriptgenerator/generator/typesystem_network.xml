<?xml version="1.0"?>
<typesystem package="com.trolltech.qt.network">
	<namespace-type name="QSsl">
		<include file-name="QSsl" location="global"/>
	</namespace-type>
	<enum-type name="QSsl::AlternateNameEntryType"/>
	<enum-type name="QSsl::AlternativeNameEntryType"/>
	<enum-type name="QSsl::EncodingFormat"/>
	<enum-type name="QSsl::KeyAlgorithm"/>
	<enum-type name="QSsl::KeyType"/>
	<enum-type name="QSsl::SslOption" />
	<enum-type name="QSsl::SslProtocol" />

	<object-type name="QAbstractNetworkCache"/>

	<object-type name="QAbstractSocket">
		<modify-function signature="error() const" rename="getError"/>
	</object-type>
	<enum-type name="QAbstractSocket::BindFlag" flags="QAbstractSocket::BindMode"/>
	<enum-type name="QAbstractSocket::NetworkLayerProtocol" />
	<enum-type name="QAbstractSocket::PauseMode" flags="QAbstractSocket::PauseModes"/>
	<enum-type name="QAbstractSocket::SocketError" />
	<enum-type name="QAbstractSocket::SocketState" />
	<enum-type name="QAbstractSocket::SocketType" />
	<enum-type name="QAbstractSocket::SocketOption" />

	<value-type name="QAuthenticator">
		<modify-function signature="operator=(QAuthenticator)" remove="all"/>
	</value-type>

	<object-type name="QDnsLookup"/>
	<enum-type name="QDnsLookup::Error"/>
	<enum-type name="QDnsLookup::Type"/>

	<value-type name="QDnsDomainNameRecord">
		<modify-function signature="operator=(QDnsDomainNameRecord)" remove="all"/>
	</value-type>

	<value-type name="QDnsHostAddressRecord">
		<modify-function signature="operator=(QDnsHostAddressRecord)" remove="all"/>
	</value-type>

	<value-type name="QDnsMailExchangeRecord">
		<modify-function signature="operator=(QDnsMailExchangeRecord)" remove="all"/>
	</value-type>

	<value-type name="QDnsServiceRecord">
		<modify-function signature="operator=(QDnsServiceRecord)" remove="all"/>
	</value-type>

	<value-type name="QDnsTextRecord">
		<modify-function signature="operator=(QDnsTextRecord)" remove="all"/>
	</value-type>

	<value-type name="QHostAddress">
		<modify-function signature="QHostAddress(unsigned char*)" remove="all"/>
		<modify-function signature="setAddress(unsigned char*)" remove="all"/>
		<modify-function signature="operator=(QString)" remove="all"/>
		<modify-function signature="operator=(QHostAddress)" remove="all"/>
	</value-type>
	<enum-type name="QHostAddress::SpecialAddress"/>

	<value-type name="QHostInfo">
		<modify-function signature="operator=(QHostInfo)" remove="all"/>
		<modify-function signature="lookupHost(QString,QObject*,const char*)" access="private" />
		<modify-function signature="lookupHost(QString,QObject*,const char*)">
			<modify-argument index="3">
				<replace-type modified-type="QString"/>
				<conversion-rule class="native">
					<insert-template name="core.convert_string_arg_to_char*"/>
				</conversion-rule>
			</modify-argument>
		</modify-function>
	</value-type>
	<enum-type name="QHostInfo::HostInfoError"/>

	<object-type name="QHttpMultiPart"/>
	<enum-type name="QHttpMultiPart::ContentType"/>

	<value-type name="QHttpPart">
		<modify-function signature="operator=(QHttpPart)" remove="all"/>
	</value-type>

	<object-type name="QLocalServer">
		<modify-function signature="waitForNewConnection(int,bool*)">
			<modify-argument index="2">
				<remove-argument/>
			</modify-argument>
		</modify-function>
	</object-type>
	<enum-type name="QLocalServer::SocketOption" flags="QLocalServer::SocketOptions"/>

	<object-type name="QLocalSocket">
		<modify-function signature="error() const" rename="getError"/>
	</object-type>
	<enum-type name="QLocalSocket::LocalSocketError"/>
	<enum-type name="QLocalSocket::LocalSocketState"/>

	<object-type name="QNetworkAccessManager">
		<modify-function signature="setCookieJar(QNetworkCookieJar*)">
			<modify-argument index="1">
				<define-ownership class="java" owner="c++"/>
			</modify-argument>
		</modify-function>
		<modify-function signature="setCache(QAbstractNetworkCache*)">
			<modify-argument index="1">
				<reference-count action="ignore" />
			</modify-argument>
		</modify-function>
		<modify-function signature="setProxyFactory(QNetworkProxyFactory*)">
			<modify-argument index="1">
				<define-ownership class="java" owner="c++" />
			</modify-argument>
		</modify-function>
	</object-type>
	<enum-type name="QNetworkAccessManager::NetworkAccessibility" />
	<enum-type name="QNetworkAccessManager::Operation" />

	<value-type name="QNetworkAddressEntry">
		<modify-function signature="operator=(QNetworkAddressEntry)" remove="all"/>
		<modify-function signature="operator==(QNetworkAddressEntry)" remove="all"/>
		<modify-function signature="operator!=(QNetworkAddressEntry)" remove="all"/>
	</value-type>

	<value-type name="QNetworkCacheMetaData">
		<modify-function signature="operator=(QNetworkCacheMetaData)" remove="all"/>
		<modify-function signature="operator==(QNetworkCacheMetaData)" remove="all"/>
		<modify-function signature="operator!=(QNetworkCacheMetaData)" remove="all"/>
		<extra-includes>
			<include file-name="QDateTime" location="global"/>
		</extra-includes>
	</value-type>

	<value-type name="QNetworkConfiguration">
		<modify-function signature="operator=(QNetworkConfiguration)" remove="all"/>
		<modify-function signature="operator==(QNetworkConfiguration)" remove="all"/>
		<modify-function signature="operator!=(QNetworkConfiguration)" remove="all"/>
	</value-type>
	<enum-type name="QNetworkConfiguration::BearerType"/>
	<enum-type name="QNetworkConfiguration::Purpose"/>
	<enum-type name="QNetworkConfiguration::StateFlag" flags="QNetworkConfiguration::StateFlags"/>
	<enum-type name="QNetworkConfiguration::Type"/>

	<object-type name="QNetworkConfigurationManager">
	</object-type>
	<enum-type name="QNetworkConfigurationManager::Capability" flags="QNetworkConfigurationManager::Capabilities"/>

	<value-type name="QNetworkCookie">
		<extra-includes>
			<include file-name="QDateTime" location="global"/>
		</extra-includes>
		<modify-function signature="operator=(QNetworkCookie)" remove="all"/>
		<modify-function signature="operator==(QNetworkCookie)" remove="all"/>
		<modify-function signature="operator!=(QNetworkCookie)" remove="all"/>
	</value-type>
	<enum-type name="QNetworkCookie::RawForm"/>

	<object-type name="QNetworkCookieJar"/>

	<object-type name="QNetworkDiskCache">
		<modify-function signature="insert(QIODevice*)">
			<modify-argument index="1">
				<reference-count action="ignore" /> <!-- function only has effect on devices retrieved using prepare() -->
			</modify-argument>
		</modify-function>
	</object-type>

	<value-type name="QNetworkInterface">
		<modify-function signature="operator=(QNetworkInterface)" remove="all"/>
	</value-type>
	<enum-type name="QNetworkInterface::InterfaceFlag" flags="QNetworkInterface::InterfaceFlags" />

	<value-type name="QNetworkProxy">
		<modify-function signature="operator=(QNetworkProxy)" remove="all"/>
		<modify-function signature="operator==(QNetworkProxy)" remove="all"/>
		<modify-function signature="operator!=(QNetworkProxy)" remove="all"/>
	</value-type>
	<enum-type name="QNetworkProxy::Capability" flags="QNetworkProxy::Capabilities"/>
	<enum-type name="QNetworkProxy::ProxyType"/>

	<object-type name="QNetworkProxyFactory">
		<modify-function signature="setApplicationProxyFactory(QNetworkProxyFactory*)">
			<modify-argument index="1">
				<define-ownership class="java" owner="c++"/>
			</modify-argument>
		</modify-function>
	</object-type>

	<value-type name="QNetworkProxyQuery">
		<modify-function signature="operator=(QNetworkProxyQuery)" remove="all" />
		<modify-function signature="operator==(QNetworkProxyQuery)" remove="all" />
		<modify-function signature="operator!=(QNetworkProxyQuery)" remove="all" />
	</value-type>
	<enum-type name="QNetworkProxyQuery::QueryType"/>

	<object-type name="QNetworkReply">
		<modify-function signature="error() const" rename="getError"/>
	</object-type>
	<enum-type name="QNetworkReply::NetworkError"/>

	<value-type name="QNetworkRequest">
		<modify-function signature="operator=(QNetworkRequest)" remove="all"/>
		<modify-function signature="operator==(QNetworkRequest)" remove="all"/>
		<modify-function signature="operator!=(QNetworkRequest)" remove="all"/>
	</value-type>
	<enum-type name="QNetworkRequest::Attribute" extensible="yes"/>
	<enum-type name="QNetworkRequest::CacheLoadControl"/>
	<enum-type name="QNetworkRequest::KnownHeaders"/>
	<enum-type name="QNetworkRequest::LoadControl"/>
	<enum-type name="QNetworkRequest::Priority"/>

	<object-type name="QNetworkSession">
		<modify-function signature="error() const" rename="getError"/>
	</object-type>
	<enum-type name="QNetworkSession::SessionError"/>
	<enum-type name="QNetworkSession::State"/>
	<enum-type name="QNetworkSession::UsagePolicy" flags="QNetworkSession::UsagePolicies" flags-known="yes"/>

	<value-type name="QSslCertificate">
		<extra-includes>
			<include file-name="QDateTime" location="global"/>
		</extra-includes>
	</value-type>
	<enum-type name="QSslCertificate::SubjectInfo"/>

	<value-type name="QSslCertificateExtension">
		<modify-function signature="operator=(QSslCertificateExtension)" remove="all"/>
	</value-type>

	<value-type name="QSslCipher"/>

	<value-type name="QSslConfiguration"/>

	<value-type name="QSslError"/>
	<enum-type name="QSslError::SslError"/>

	<value-type name="QSslKey"/>

	<object-type name="QSslSocket"/>
	<enum-type name="QSslSocket::SslMode"/>
	<enum-type name="QSslSocket::PeerVerifyMode"/>

	<object-type name="QTcpServer">
		<modify-function signature="waitForNewConnection(int,bool*)">
			<modify-argument index="2">
				<remove-argument/>
			</modify-argument>
		</modify-function>
	</object-type>

	<object-type name="QTcpSocket"/>

	<object-type name="QUdpSocket">
		<modify-function signature="writeDatagram(const char*,qint64,QHostAddress,unsigned short)" remove="all"/>
	</object-type>

	<value-type name="QUrlInfo">
		<modify-function signature="operator=(QUrlInfo)" remove="all"/>
	</value-type>
	<enum-type name="QUrlInfo::PermissionSpec"/>

	<value-type name="QIPv6Address">
		<modify-function signature="operator[](int)const">
			<remove/>
		</modify-function>
		<modify-function signature="operator[](int)">
			<remove/>
		</modify-function>
	</value-type>

	<suppress-warning text="*unmatched parameter type 'sockaddr const*" />

	<suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QUrlInfo' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkCacheMetaData' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkProxyQuery' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkAddressEntry' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkCookie' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkProxy' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QNetworkRequest' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QAuthenticator' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />

	<!-- For people building without SSL support -->
	<suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'com.trolltech.qt.network.QSslSocket' for enum 'SslMode' is not declared" />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslError' is specified in typesystem, but not defined. This could potentially lead to compilation errors." />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslCipher' is specified in typesystem, but not defined. This could potentially lead to compilation errors." />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslKey' is specified in typesystem, but not defined. This could potentially lead to compilation errors." />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'com.trolltech.qt.network.QSslError' for enum 'SslError' is not declared" />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslCertificate' is specified in typesystem, but not defined. This could potentially lead to compilation errors." />
	<suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'com.trolltech.qt.network.QSslSocket' for enum 'PeerVerifyMode' is not declared"/>
	<suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'com.trolltech.qt.network.QSslCertificate' for enum 'SubjectInfo' is not declared"/>
	<suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslConfiguration' is specified in typesystem, but not defined. This could potentially lead to compilation errors."/>
	<suppress-warning text="WARNING(MetaJavaBuilder) :: type 'QSslSocket' is specified in typesystem, but not defined. This could potentially lead to compilation errors."/>
	<!-- -->
</typesystem>
