#############################################################################
# Makefile for building: libreport.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.7.4) on: ?? ???. 25 19:34:58 2012
# Project:  report.pro
# Template: lib
# Command: /usr/bin/qmake -o Makefile report.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DREPORT_LIBRARY -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/default -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtXml -I/usr/include/QtSql -I/usr/include -I../common -I../../common -I../renderer -Itmp
LINK          = g++
LFLAGS        = -m64 -Wl,-O1 -shared -Wl,-soname,libreport.so.1
LIBS          = $(SUBLIBS)  -L/usr/lib64 -L../../debug/lib -lrenderer -lcommon -lDmtx_Library -lQtSql -L/usr/lib64 -lQtXml -lQtGui -L/usr/X11R6/lib64 -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = tmp/

####### Files

SOURCES       = report.cpp \
		wrapper.cpp \
		modelwrapper.cpp \
		templategenerator.cpp qrc_report.cpp
OBJECTS       = tmp/report.o \
		tmp/wrapper.o \
		tmp/modelwrapper.o \
		tmp/templategenerator.o \
		tmp/qrc_report.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		report.pro
QMAKE_TARGET  = report
DESTDIR       = ../../debug/dll/
TARGET        = libreport.so.1.0.0
TARGETA       = ../../debug/dll/libreport.a
TARGETD       = libreport.so.1.0.0
TARGET0       = libreport.so
TARGET1       = libreport.so.1
TARGET2       = libreport.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../../debug/dll/$(TARGET)

../../debug/dll/$(TARGET): ../../debug/lib/libcommon.a ../../debug/lib/librenderer.a $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../../debug/dll/ || $(MKDIR) ../../debug/dll/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../../debug/dll/$(TARGET)
	-$(DEL_FILE) ../../debug/dll/$(TARGET0)
	-$(DEL_FILE) ../../debug/dll/$(TARGET1)
	-$(DEL_FILE) ../../debug/dll/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../../debug/dll/



staticlib: $(TARGETA)

$(TARGETA): ../../debug/lib/libcommon.a ../../debug/lib/librenderer.a $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: report.pro  /usr/share/qt4/mkspecs/default/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib64/libQtSql.prl \
		/usr/lib64/libQtCore.prl \
		/usr/lib64/libQtXml.prl \
		/usr/lib64/libQtGui.prl
	$(QMAKE) -o Makefile report.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib64/libQtSql.prl:
/usr/lib64/libQtCore.prl:
/usr/lib64/libQtXml.prl:
/usr/lib64/libQtGui.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile report.pro

dist: 
	@$(CHK_DIR_EXISTS) tmp/report1.0.0 || $(MKDIR) tmp/report1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) tmp/report1.0.0/ && $(COPY_FILE) --parents report.h wrapper.h report_global.h modelwrapper.h templategenerator.h tmp/report1.0.0/ && $(COPY_FILE) --parents report.qrc tmp/report1.0.0/ && $(COPY_FILE) --parents report.cpp wrapper.cpp modelwrapper.cpp templategenerator.cpp tmp/report1.0.0/ && (cd `dirname tmp/report1.0.0` && $(TAR) report1.0.0.tar report1.0.0 && $(COMPRESS) report1.0.0.tar) && $(MOVE) `dirname tmp/report1.0.0`/report1.0.0.tar.gz . && $(DEL_FILE) -r tmp/report1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../../debug/dll/$(TARGET) 
	-$(DEL_FILE) ../../debug/dll/$(TARGET0) ../../debug/dll/$(TARGET1) ../../debug/dll/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all: qrc_report.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_report.cpp
qrc_report.cpp: report.qrc \
		files/template.xml
	/usr/bin/rcc -name report report.qrc -o qrc_report.cpp

compiler_image_collection_make_all: tmp/qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) tmp/qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_rcc_clean 

####### Compile

tmp/report.o: report.cpp report.h \
		report_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/report.o report.cpp

tmp/wrapper.o: wrapper.cpp wrapper.h \
		report_global.h \
		modelwrapper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/wrapper.o wrapper.cpp

tmp/modelwrapper.o: modelwrapper.cpp modelwrapper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/modelwrapper.o modelwrapper.cpp

tmp/templategenerator.o: templategenerator.cpp templategenerator.h \
		report_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/templategenerator.o templategenerator.cpp

tmp/qrc_report.o: qrc_report.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/qrc_report.o qrc_report.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

